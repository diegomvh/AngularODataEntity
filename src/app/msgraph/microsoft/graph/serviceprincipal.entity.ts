import { Duration } from 'angular-odata';

//#region ODataApi Imports
import { DirectoryObject } from './directoryobject.entity';
import { AddIn } from './addin.complex';
import { PermissionScope } from './permissionscope.complex';
import { AppRole } from './approle.complex';
import { InformationalUrl } from './informationalurl.complex';
import { KeyCredential } from './keycredential.complex';
import { PasswordCredential } from './passwordcredential.complex';
import { SamlSingleSignOnSettings } from './samlsinglesignonsettings.complex';
import { AppRoleAssignment } from './approleassignment.entity';
import { OAuth2PermissionGrant } from './oauth2permissiongrant.entity';
import { HomeRealmDiscoveryPolicy } from './homerealmdiscoverypolicy.entity';
import { TokenIssuancePolicy } from './tokenissuancepolicy.entity';
import { TokenLifetimePolicy } from './tokenlifetimepolicy.entity';
import { ClaimsMappingPolicy } from './claimsmappingpolicy.entity';
import { DelegatedPermissionClassification } from './delegatedpermissionclassification.entity';
import { Endpoint } from './endpoint.entity';
import { AddInModel } from './addin.model';
import { PermissionScopeModel } from './permissionscope.model';
import { AppRoleModel } from './approle.model';
import { InformationalUrlModel } from './informationalurl.model';
import { KeyCredentialModel } from './keycredential.model';
import { PasswordCredentialModel } from './passwordcredential.model';
import { SamlSingleSignOnSettingsModel } from './samlsinglesignonsettings.model';
import { DirectoryObjectModel } from './directoryobject.model';
import { AppRoleAssignmentModel } from './approleassignment.model';
import { OAuth2PermissionGrantModel } from './oauth2permissiongrant.model';
import { HomeRealmDiscoveryPolicyModel } from './homerealmdiscoverypolicy.model';
import { TokenIssuancePolicyModel } from './tokenissuancepolicy.model';
import { TokenLifetimePolicyModel } from './tokenlifetimepolicy.model';
import { ClaimsMappingPolicyModel } from './claimsmappingpolicy.model';
import { DelegatedPermissionClassificationModel } from './delegatedpermissionclassification.model';
import { EndpointModel } from './endpoint.model';
import { AddInCollection } from './addin.collection';
import { PermissionScopeCollection } from './permissionscope.collection';
import { AppRoleCollection } from './approle.collection';
import { InformationalUrlCollection } from './informationalurl.collection';
import { KeyCredentialCollection } from './keycredential.collection';
import { PasswordCredentialCollection } from './passwordcredential.collection';
import { SamlSingleSignOnSettingsCollection } from './samlsinglesignonsettings.collection';
import { DirectoryObjectCollection } from './directoryobject.collection';
import { AppRoleAssignmentCollection } from './approleassignment.collection';
import { OAuth2PermissionGrantCollection } from './oauth2permissiongrant.collection';
import { HomeRealmDiscoveryPolicyCollection } from './homerealmdiscoverypolicy.collection';
import { TokenIssuancePolicyCollection } from './tokenissuancepolicy.collection';
import { TokenLifetimePolicyCollection } from './tokenlifetimepolicy.collection';
import { ClaimsMappingPolicyCollection } from './claimsmappingpolicy.collection';
import { DelegatedPermissionClassificationCollection } from './delegatedpermissionclassification.collection';
import { EndpointCollection } from './endpoint.collection';
//#endregion

export interface ServicePrincipal extends DirectoryObject {
  //#region ODataApi Properties
  accountEnabled?: boolean;
  addIns: AddIn[];
  alternativeNames: string[];
  appDescription?: string;
  appDisplayName?: string;
  appId?: string;
  applicationTemplateId?: string;
  appOwnerOrganizationId?: string;
  appRoleAssignmentRequired: boolean;
  appRoles: AppRole[];
  description?: string;
  displayName?: string;
  homepage?: string;
  info?: InformationalUrl;
  keyCredentials: KeyCredential[];
  loginUrl?: string;
  logoutUrl?: string;
  notes?: string;
  notificationEmailAddresses: string[];
  oauth2PermissionScopes: PermissionScope[];
  passwordCredentials: PasswordCredential[];
  preferredSingleSignOnMode?: string;
  preferredTokenSigningKeyThumbprint?: string;
  replyUrls: string[];
  samlSingleSignOnSettings?: SamlSingleSignOnSettings;
  servicePrincipalNames: string[];
  servicePrincipalType?: string;
  signInAudience?: string;
  tags: string[];
  tokenEncryptionKeyId?: string;
  appRoleAssignedTo?: AppRoleAssignment[];
  appRoleAssignments?: AppRoleAssignment[];
  claimsMappingPolicies?: ClaimsMappingPolicy[];
  createdObjects?: DirectoryObject[];
  delegatedPermissionClassifications?: DelegatedPermissionClassification[];
  endpoints?: Endpoint[];
  homeRealmDiscoveryPolicies?: HomeRealmDiscoveryPolicy[];
  memberOf?: DirectoryObject[];
  oauth2PermissionGrants?: OAuth2PermissionGrant[];
  ownedObjects?: DirectoryObject[];
  owners?: DirectoryObject[];
  tokenIssuancePolicies?: TokenIssuancePolicy[];
  tokenLifetimePolicies?: TokenLifetimePolicy[];
  transitiveMemberOf?: DirectoryObject[];
  //#endregion
}